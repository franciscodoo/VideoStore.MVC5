@model Vidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Action</h2>

@using (@Html.BeginForm("Save","Movies"))
{
    <div class="form-group">
        @Html.LabelFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" }) @*props will be based in Customer.cs props*@
        @Html.ValidationMessageFor(x => x.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ReleaseDate)
        @Html.TextBoxFor(x => x.ReleaseDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.GenreId)
        @Html.DropDownListFor(
            x => x.GenreId,
            new SelectList(Model.Genres,"Id","Description"),
            "Select Genre",
            new { @class = "form-control"})
        @Html.ValidationMessageFor(x => x.GenreId)
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.NumberInStock)
        @Html.TextBoxFor(x => x.NumberInStock, new { @type = "number", @class = "form-control"})
        @Html.ValidationMessageFor(x => x.NumberInStock)
    </div>
    
    @Html.HiddenFor(x => x.Id)
    @Html.AntiForgeryToken(); //AntiForgeryToken to avoid CSRF Attacks
    <button type ="submit" class="btn btn-primary">Save</button> 
}

@section scripts
{
    @*client-side validation*@
    @*NOTE: Custom Validation Attributes does NOT have client-side support*@
    @*To check if server-side validation is on/off: view network tab on browser's dev tools*@

    @Scripts.Render("~/bundles/jqueryval")
}


